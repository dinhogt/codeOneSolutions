user  nginx;
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Redireciona todo HTTP para HTTPS
    server {
        listen 8080;  # Porta do host para frontend, evitar conflito com Nginx do host
        server_name codeonesolutions.com.br www.codeonesolutions.com.br;

        return 301 https://$host$request_uri;
    }

    # Servidor HTTPS
    server {
        listen 443 ssl;
        server_name codeonesolutions.com.br www.codeonesolutions.com.br;

        # Certificados Let's Encrypt
        ssl_certificate /etc/letsencrypt/live/codeonesolutions.com.br/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/codeonesolutions.com.br/privkey.pem;

        # Segurança extra
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        root /usr/share/nginx/html;  # Diretório do frontend build
        index index.html;

        # Frontend React
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Backend Node
        location /api/ {
            proxy_pass http://127.0.0.1:3000;  # Backend rodando na EC2 na porta 3000
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
